name: tests

on:
  workflow_dispatch:

  pull_request:
    branches:
      - develop
      - main
    paths:
        - '.github/workflows/tests.yml'
        - 'app/**'
        - 'bootstrap/**'
        - 'config/**'
        - 'database/**'
        - 'public/**'
        - 'resources/**'
        - 'routes/**'
        - 'storage/**'
        - 'composer.json'
        - 'composer.lock'
        - 'package.json'
        - 'package-lock.json'
        - 'vite.config.js'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  prepare:
    runs-on: ubuntu-latest
    outputs:
      build-artifacts: ${{ steps.build.outputs.build-artifacts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Build Assets
        id: build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: public/build
          retention-days: 1

  node_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Run Tests
        run: npm run test

  php_tests:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: public/build

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, bcmath, zip, gd

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Set up test environment
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan view:clear
          php artisan route:clear

      - name: Create SQLite database for testing
        run: touch database/database.sqlite

      - name: Run Database Migrations
        run: php artisan migrate --force

      - name: Run Tests
        run: php artisan test
        env:
          APP_ENV: testing
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          CACHE_STORE: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
          LOG_CHANNEL: null
